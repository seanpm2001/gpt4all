import QtCore
import QtQuick
import QtQuick.Controls
import QtQuick.Controls.Basic
import QtQuick.Layouts
import QtQuick.Dialogs
import localdocs
import modellist
import mysettings
import network

MySettingsTab {
    onRestoreDefaultsClicked: {
        MySettings.restoreLocalDocsDefaults();
    }

    showRestoreDefaultsButton: true

    title: qsTr("LocalDocs")
    contentItem: ColumnLayout {
        id: root
        spacing: 10

        RowLayout {
            MySettingsLabel {
                id: showReferencesLabel
                text: qsTr("Show sources")
                helpText: qsTr("Shows sources in GUI generated by localdocs")
            }
            MyCheckBox {
                id: showReferencesBox
                checked: MySettings.localDocsShowReferences
                onClicked: {
                    MySettings.localDocsShowReferences = !MySettings.localDocsShowReferences
                }
            }
        }

        Label {
            Layout.topMargin: 15
            color: theme.grayRed900
            font.pixelSize: theme.fontSizeLarge
            font.bold: true
            text: "Advanced"
        }

        Rectangle {
            Layout.fillWidth: true
            height: 2
            color: theme.grayRed500
        }

        MySettingsLabel {
            id: warningLabel
            Layout.topMargin: 15
            Layout.fillWidth: true
            color: theme.textErrorColor
            wrapMode: Text.WordWrap
            text: qsTr("Warning: Advanced usage only.")
            helpText: qsTr("Values too large may cause localdocs failure, extremely slow responses or failure to respond at all. Roughly speaking, the {N chars x N snippets} are added to the model's context window. More info <a href=\"https://docs.gpt4all.io/gpt4all_chat.html#localdocs-beta-plugin-chat-with-your-data\">here.</a>")
//                onLinkActivated: function(link) { Qt.openUrlExternally(link) } // FIXME_BLOCKER
        }

        RowLayout {
            Layout.topMargin: 15
            MySettingsLabel {
                id: chunkLabel
                Layout.fillWidth: true
                text: qsTr("Document snippet size (characters)")
                helpText: qsTr("Number of characters per document snippet. Larger numbers increase likelihood of factual responses, but also result in slower generation.")
            }

            MyTextField {
                id: chunkSizeTextField
                text: MySettings.localDocsChunkSize
                validator: IntValidator {
                    bottom: 1
                }
                onEditingFinished: {
                    var val = parseInt(text)
                    if (!isNaN(val)) {
                        MySettings.localDocsChunkSize = val
                        focus = false
                    } else {
                        text = MySettings.localDocsChunkSize
                    }
                }
            }
        }

        RowLayout {
            Layout.topMargin: 15
            MySettingsLabel {
                id: contextItemsPerPrompt
                text: qsTr("Max document snippets per prompt")
                helpText: qsTr("Max best N matches of retrieved document snippets to add to the context for prompt. Larger numbers increase likelihood of factual responses, but also result in slower generation.")

            }

            MyTextField {
                text: MySettings.localDocsRetrievalSize
                validator: IntValidator {
                    bottom: 1
                }
                onEditingFinished: {
                    var val = parseInt(text)
                    if (!isNaN(val)) {
                        MySettings.localDocsRetrievalSize = val
                        focus = false
                    } else {
                        text = MySettings.localDocsRetrievalSize
                    }
                }
            }
        }

        Rectangle {
            Layout.topMargin: 15
            Layout.fillWidth: true
            height: 2
            color: theme.grayRed500
        }
     }
}
